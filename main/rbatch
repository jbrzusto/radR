#!/bin/bash
##  svn $Id: $
##
##  radR : an R-based platform for acquisition and analysis of radar data
##  Copyright (C) 2006, 2007, 2008 John Brzustowski        
##
##  This program is free software; you can redistribute it and/or modify
##  it under the terms of the GNU General Public License as published by
##  the Free Software Foundation; either version 2 of the License, or
##  (at your option) any later version.
##
##  This program is distributed in the hope that it will be useful,
##  but WITHOUT ANY WARRANTY; without even the implied warranty of
##  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
##  GNU General Public License for more details.
##
##  You should have received a copy of the GNU General Public License
##  along with this program.  If not, see <http://www.gnu.org/licenses/>.
##
################################################################################
#
# rbatch: run process_one.R on a set of files; 
#         e.g. process a bunch of blip movies to extract tracks
#
# usage:  rbatch [--parm PARMFILE] FILE1 ... FILEN
#
# e.g.:   rbatch /array/data1/jbrzusto/data/CS*.bma
#
# Parameter overrides are taken from PARMFILE, if the --parms option is specified.
# 
# NOTE: this file must be executed from the toplevel radR directory.

if [ "$1" == "--help" -o "$1" == "-h" -o "$1" == "" ]; then
    cat <<-EOF
rbatch:  run a radR script on a set of files.
e.g. process a bunch of blip movies to extract tracks

usage:  rbatch [--no-progress] [--parm PARMFILE] [--script SCRIPTFILE] SITE FILE1 ... FILEN

e.g.:   rbatch --script scripts/inrad2blips.R  WS /media/radar/CansoData18/SGdata/2015-09-11/08

SITE is a site code, used as the prefix for output filenames.
FILE1 ... FILEN are either filenames or folder names, depending on the script

Parameter overrides are taken from PARMFILE, if the --parms option is specified.
Specifying --no-progress prevents a running display of scans processed.
If the --script SCRIPTFILE is specified, SCRIPTFILE is used to control
processing, rather than the default file 'process_one.R'
	EOF
    exit 1;
fi

PROGRESS="--show-progress"
SCRIPTFILE="main/process_one.R"
PARMS=""
DEBUG=""

while (( 1 )); do
    case "$1" in
        --no-progress )
            PROGRESS=""
            shift ;;
        --parm )
            if [ ! -f "$2" ]; then
                echo The parm file "$2" does not exist.
                exit 1
            fi
            PARMS="--parm $2"
            shift 2 ;;
        --script )
            SCRIPTFILE=$2
            if [ ! -f "$SCRIPTFILE" ]; then
                echo The parm file "$SCRIPTFILE" does not exist.
                exit 1
            fi
            shift 2 ;;
        --debug )
            DEBUG="-d gdb"
            shift;;
        *)
            break;;
        esac
done

SITE=$1
shift
if [ "$SITE" == "" ]; then
    echo You must specify a site code.
    exit 2
fi

if [ "$1" == "" ]; then
    echo You have to specify some file or folder names.
    exit 3
fi

for x in "$@"; do
    R $DEBUG --no-save --quiet --args --no-gui --no-eventloop $PROGRESS --source $SCRIPTFILE $PARMS $SITE "$x"
done

echo
