// Client12.h - extracted from Seascan Client.DLL Library documentation 
//              converted to the style required for GCC-MINGW

#ifndef _CLIENT12_H
#define _CLIENT12_H

extern __stdcall __attribute__ ((alias ("XSigQueryNumOfServers") )) CLIENT_STATUS XSigQueryNumOfServers(USHORT *NumOfServers, char ServerNames[4][16]);
extern __stdcall  __attribute__ ((alias ("XSigQueryNumOfServersEx") )) CLIENT_STATUS XSigQueryNumOfServersEx (USHORT *NumOfServers, char ServerNames[8][16], int maxNameCount);
extern __stdcall __attribute__ ((alias ("XSigGetServerStatus") )) CLIENT_STATUS XSigGetServerStatus(SERVER_STATUS *status, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigGetRPCStatus") )) CLIENT_STATUS XSigGetRPCStatus(RPC_COMMAND_STATUS *status);
extern __stdcall __attribute__ ((alias ("XSigGetADStatus") )) CLIENT_STATUS XSigGetADStatus(A2D_STATUS *pStat, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigSetRadarOnline") )) CLIENT_STATUS XSigSetRadarOnline(SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigSetRadarOffline") )) CLIENT_STATUS XSigSetRadarOffline(SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigSetDesiredPlen") )) CLIENT_STATUS XSigSetDesiredPlen(USHORT Plen, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigSetDesiredMode") )) CLIENT_STATUS XSigSetDesiredMode(USHORT Mode, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigGetRadarChannel") )) CLIENT_STATUS XSigGetRadarChannel(int * currentChannel, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigSetRadarChannel") )) CLIENT_STATUS XSigSetRadarChannel(int channel, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigSetAGCParameters") )) CLIENT_STATUS XSigSetAGCParameters(AGC_PARAMETERS *parms, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigGetAGCParameters") )) CLIENT_STATUS XSigGetAGCParameters(AGC_PARAMETERS *parms, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigGetAGCStatus") )) CLIENT_STATUS XSigGetAGCStatus(AGC_STATUS *status, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigEnableAGC") )) CLIENT_STATUS XSigEnableAGC(SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigDisableAGC") )) CLIENT_STATUS XSigDisableAGC(SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigSetGyro") )) CLIENT_STATUS XSigSetGyro(BOOL Enable, float gyro, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigEnableSelectiveDigitization") )) CLIENT_STATUS XSigEnableSelectiveDigitization(float newStartBearing, float pulsesToCollect, ULONG newStartRange, float newStopRange, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigDisableSelectiveDigitization") )) CLIENT_STATUS XSigDisableSelectiveDigitization(SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigSetRaytheonRadarControl") )) CLIENT_STATUS XSigSetRaytheonRadarControl (BYTE *rdrControl, int bytesToTx, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigGetRaytheonRadarControl") )) CLIENT_STATUS XSigGetRaytheonRadarControl (BYTE *rdrControl, int bytesToTx, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigSetTermaRadarControl") )) CLIENT_STATUS XSigSetTermaRadarControl (BYTE *rdrControl, int bytesToTx, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigGetTermaRadarControl") )) CLIENT_STATUS XSigGetTermaRadarControl (TERMA_REPORT * pReport, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigGetSignalProcessingParameters") )) CLIENT_STATUS XSigGetSignalProcessingParameters( PROCESSING_PARAMETERS * pParameters, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigSetSignalProcessingParameters") )) CLIENT_STATUS XSigSetSignalProcessingParameters( PROCESSING_PARAMETERS * pParameters, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigGetData") )) CLIENT_STATUS XSigGetData(DATA_HEADER *pHeader, BYTE * pData, ULONG desiredChannel, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigGetAscopeData") )) CLIENT_STATUS XSigGetAscopeData(DATA_HEADER *pHeader, char Adata[512], float radial, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigSetScans") )) CLIENT_STATUS XSigSetScans(USHORT Scans, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigSetPF") )) CLIENT_STATUS XSigSetPF(SHORT PfPosNeg, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigSetCFAR") )) CLIENT_STATUS XSigSetCFAR(SHORT CFARPosNeg, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigSetCFARParameters") )) CLIENT_STATUS XSigSetCFARParameters(USHORT newWindowLength, SHORT newOffset, USHORT newRank, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigSetProcessing") )) CLIENT_STATUS XSigSetProcessing(USHORT Plen, USHORT Mode, USHORT Scans, SHORT PfPosNeg, SHORT CFARPosNeg, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigGetQuadrant") )) CLIENT_STATUS XSigGetQuadrant(DATA_HEADER *pHeader, BYTE * pData, ULONG desiredChannel, long desiredQuadrant, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigGetProcessing") )) CLIENT_STATUS XSigGetProcessing(DATA_HEADER *pHeader, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigEnableMotionCompensation") )) CLIENT_STATUS XSigEnableMotionCompensation(SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigDisableMotionCompensation") )) CLIENT_STATUS XSigDisableMotionCompensation(SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigEnableScanConversion") )) CLIENT_STATUS XSigEnableScanConversion(SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigDisableScanConversion") )) CLIENT_STATUS XSigDisableScanConversion(SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigGetNumberOfSources") )) CLIENT_STATUS XSigGetNumberOfSources(ULONG *numSources, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigSelectSourceToProcess") )) CLIENT_STATUS XSigSelectSourceToProcess(ULONG newSourceToProcess, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigEnableClientPacing") )) CLIENT_STATUS XSigEnableClientPacing(SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigDisableClientPacing") )) CLIENT_STATUS XSigDisableClientPacing(SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigProcessNextImage") )) CLIENT_STATUS XSigProcessNextImage(SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigGetSTCParameters") )) CLIENT_STATUS XSigGetSTCParameters(STC_PARAMETERS * parms, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigSetSTCParameters") )) CLIENT_STATUS XSigSetSTCParameters(STC_PARAMETERS * parms, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigSetDisplayOrigin") )) CLIENT_STATUS XSigSetDisplayOrigin(int newX, int newY, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigGetDisplayOrigin") )) CLIENT_STATUS XSigGetDisplayOrigin(int * newX, int * newY, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigGetAngleOffset") )) CLIENT_STATUS XSigGetAngleOffset(float * currentOffset, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigSetAngleOffset") )) CLIENT_STATUS XSigSetAngleOffset(float newOffset, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigGetManualSpeed") )) CLIENT_STATUS XSigGetManualSpeed(float * currentManualSpeed, float * currentManualCourse, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigSetManualSpeed") )) CLIENT_STATUS XSigSetManualSpeed(float newManualSpeed, float newManualCourse, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigGetClutterMapParmsForDisplay") )) CLIENT_STATUS XSigGetClutterMapParmsForDisplay(CLUTTER_MAP_PARAMETERS * pParms, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigSetClutterMapParmsForDisplay") )) CLIENT_STATUS XSigSetClutterMapParmsForDisplay(CLUTTER_MAP_PARAMETERS * pParms, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigGetProcessingDLLInfo") )) CLIENT_STATUS XSigGetProcessingDLLInfo();
extern __stdcall __attribute__ ((alias ("XSigSetDisplayClutterMapMaskPoints") )) CLIENT_STATUS XSigSetDisplayClutterMapMaskPoints(MASK_COORD * pMaskPoints, int numberOfSegments, int * numberOfPointsInSegment, BOOL enable, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigGetDisplayClutterMapMaskPoints") )) CLIENT_STATUS XSigGetDisplayClutterMapMaskPoints(MASK_COORD *pMaskPoints, int * numberOfSegments, int * numberOfPointsInSegment, BOOL * enable, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigGetTapeStatus") )) CLIENT_STATUS XSigGetTapeStatus(TAPE_STATUS *status, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigGetTapeContents") )) CLIENT_STATUS XSigGetTapeContents(TAPE_CONTENTS *contents, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigStartRecording") )) CLIENT_STATUS XSigStartRecording(USHORT ScansToSkip, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigStopRecording") )) CLIENT_STATUS XSigStopRecording(SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigStartPlayback") )) CLIENT_STATUS XSigStartPlayback(time_t StartTime, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigStopPlayback") )) CLIENT_STATUS XSigStopPlayback(SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigSetCurrentAccessMode") )) CLIENT_STATUS XSigSetCurrentAccessMode(USHORT newMode, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigLockMedia") )) CLIENT_STATUS XSigLockMedia(BOOL lockFlag, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigUnloadMedia") )) CLIENT_STATUS XSigUnloadMedia(SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigLoadNewTape") )) CLIENT_STATUS XSigLoadNewTape(USHORT AccessMode, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigLabelTape") )) CLIENT_STATUS XSigLabelTape(char * newLabel, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigStartExtraction") )) CLIENT_STATUS XSigStartExtraction(SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigStopExtraction") )) CLIENT_STATUS XSigStopExtraction(SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigSetExtractionParameters") )) CLIENT_STATUS XSigSetExtractionParameters(EXTRACTION_PARAMETERS *parms, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigGetExtractionParameters") )) CLIENT_STATUS XSigGetExtractionParameters(EXTRACTION_PARAMETERS *parms, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigGetExtractionStatus") )) CLIENT_STATUS XSigGetExtractionStatus(EXTRACTION_STATUS *status, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigGetExtractedPlots") )) CLIENT_STATUS XSigGetExtractedPlots(PLOTS *plots, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigSetExtractionMask") )) CLIENT_STATUS XSigSetExtractionMask(USHORT Mode, ULONG MaskWidth, ULONG MaskHeight, BYTE *Coastline1BitMask, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigGetHistogram") )) CLIENT_STATUS XSigGetHistogram(HISTOGRAM * ptr, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigSetPlotExtractorCFARParameters") )) CLIENT_STATUS XSigSetPlotExtractorCFARParameters(USHORT newWindowLength, SHORT newOffset, USHORT newRank, BOOL useClutterMap, USHORT newTimeConstant, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigSetPlotExtractorScanAveragingParameters") )) CLIENT_STATUS XSigSetPlotExtractorScanAveragingParameters( BOOL enabled, USHORT newNumScans, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigEnablePlotBlanking") )) CLIENT_STATUS XSigEnablePlotBlanking(int NumAreas, BLANK_AREA *areasToBlank, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigDisablePlotBlanking") )) CLIENT_STATUS XSigDisablePlotBlanking( SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigSetThresholdMap") )) CLIENT_STATUS XSigSetThresholdMap(BYTE thresholdMap[360][128], SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigGetProcessedPlotImage") )) CLIENT_STATUS XSigGetProcessedPlotImage(DATA_HEADER *pHeader, BYTE * pData, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigGetProcessedPlotImageWithPlots") )) CLIENT_STATUS XSigGetProcessedPlotImageWithPlots(DATA_HEADER * pHeader, BYTE * pData, PLOTS * pPlots, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigSetExtendedExtractionParameters") )) CLIENT_STATUS XSigSetExtendedExtractionParameters( EXTENDED_EXTRACTION_PARAMETERS * parms, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigGetPlotSTCParameters") )) CLIENT_STATUS XSigGetPlotSTCParameters(STC_PARAMETERS * parms, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigSetPlotSTCParameters") )) CLIENT_STATUS XSigSetPlotSTCParameters(STC_PARAMETERS * parms, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigSetPlotExtractionMaskPoints") )) CLIENT_STATUS XSigSetPlotExtractionMaskPoints(MASK_COORD * pMaskPoints, int numberOfSegments, int * numberOfPointsInSegment, BOOL enable, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigGetPlotExtractionMaskPoints") )) CLIENT_STATUS XSigGetPlotExtractionMaskPoints(MASK_COORD *pMaskPoints, int * numberOfSegments, int * numberOfPointsInSegment, BOOL * enable, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigGetClutterMapParmsForPlot") )) CLIENT_STATUS XSigGetClutterMapParmsForPlot(CLUTTER_MAP_PARAMETERS * pParms, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigSetClutterMapParmsForPlot") )) CLIENT_STATUS XSigSetClutterMapParmsForPlot(CLUTTER_MAP_PARAMETERS * pParms, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigSetPlotExtractionClutterMapMaskPoints") )) CLIENT_STATUS XSigSetPlotExtractionClutterMapMaskPoints(MASK_COORD * pMaskPoints, int numberOfSegments, int * numberOfPointsInSegment, BOOL enable, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigGetPlotExtractionClutterMapMaskPoints") )) CLIENT_STATUS XSigGetPlotExtractionClutterMapMaskPoints(MASK_COORD *pMaskPoints, int * numberOfSegments, int * numberOfPointsInSegment, BOOL * enable, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigGetAdvancedPlotSettings") )) CLIENT_STATUS XSigGetAdvancedPlotSettings(ADV_PLOT_SETTINGS * pParms, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigSetAdvancedPlotSettings") )) CLIENT_STATUS XSigSetAdvancedPlotSettings(ADV_PLOT_SETTINGS * pParms, SHORT TargetServer);

// the following don't use "FAR WINAPI", so presumably we can just omit __stdcall
__attribute__ ((alias ("_STATUS") )) extern CLIENT_STATUS XSigGetPlotExtractionSettingsRemote( PLOT_EXTRACTION_SETTINGS * pSettings, SHORT TargetServer);
extern CLIENT_STATUS XSigUpdatePlotExtractionStatusRemote(EXTRACTION_PARAMETERS *pParms, EXTRACTION_STATUS *pStatus, HISTOGRAM *pHistogram, SHORT TargetServer);
extern CLIENT_STATUS XSigNewPlotsReadyRemote(PLOT * pPlotArray, PLOT_HDR * pHeader, SHORT TargetServer);
extern CLIENT_STATUS XSigGetPlotImageRemote(DATA_HEADER *pHeader, BYTE * pImageBuffer, int Quadrant, SHORT TargetServer);
extern CLIENT_STATUS XSigGetPlotExtractionMaskRemote(DATA_HEADER * pMaskHeader, BYTE * pCompressedMaskBuffer, SHORT TargetServer);
extern CLIENT_STATUS XSigGetBlankingAreasRemote(int *NumAreas, BLANK_AREA *areasToBlank, SHORT TargetServer);
extern CLIENT_STATUS XSigGetThresholdMapRemote(BYTE mapBuffer[360][128], SHORT TargetServer);
extern CLIENT_STATUS XSigGetExtendedExtractionParametersRemote( EXTENDED_EXTRACTION_PARAMETERS * parms, SHORT TargetServer);
extern CLIENT_STATUS XSigSendProcessedPlotImageRemote(DATA_HEADER *pHeader, BYTE * pData, SHORT TargetServer);

extern __stdcall __attribute__ ((alias ("XSigNewTracksReady") )) CLIENT_STATUS XSigNewTracksReady(TRACKS * pTrackBuffer, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigGetTracks") )) CLIENT_STATUS XSigGetTracks(TRACKS * pTrackBuffer, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigEnableSimulationMode") )) CLIENT_STATUS XSigEnableSimulationMode(ULONG desiredScenario, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigDisableSimulationMode") )) CLIENT_STATUS XSigDisableSimulationMode(SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigSetTrackerHost") )) CLIENT_STATUS XSigSetTrackerHost(char * trackerHostName, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigResetTrackerHost") )) CLIENT_STATUS XSigResetTrackerHost(SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigSetGateCriteria") )) CLIENT_STATUS XSigSetGateCriteria(double MaxTargetKnots, double XYrmsPercent, double AntennaBeamwidth, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigGetGateCriteria") )) CLIENT_STATUS XSigGetGateCriteria(double *pMaxTargetKnots, double *pXYrmsPercent, double *pAntennaBeamwidth, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigSetMofN") )) CLIENT_STATUS XSigSetMofN(unsigned short M, unsigned short N, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigGetMofN") )) CLIENT_STATUS XSigGetMofN(unsigned short * pM, unsigned short *pN, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigSetTrackLifetime") )) CLIENT_STATUS XSigSetTrackLifetime(unsigned char MaxFixes, unsigned char TentativeSeconds,unsigned char LTMissedDetect, unsigned char DTMissedDetect, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigGetTrackLifetime") )) CLIENT_STATUS XSigGetTrackLifetime(unsigned char *pMaxFixes, unsigned char *pTentativeSeconds, unsigned char *pLTMissedDetect, unsigned char *pDTMissedDetect, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigGetAcquisitionZone") )) CLIENT_STATUS XSigGetAcquisitionZone(double range[4], double bearing[4], unsigned Id, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigSetAcquisitionZone") )) CLIENT_STATUS XSigSetAcquisitionZone(double range[4], double bearing[4], long *Id, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigDropAcquisitionZone") )) CLIENT_STATUS XSigDropAcquisitionZone( unsigned Id, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigManualAcquisition") )) CLIENT_STATUS XSigManualAcquisition(double range, double bearing, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigDropTarget") )) CLIENT_STATUS XSigDropTarget( unsigned Id, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigNewTracksReadyV2") )) CLIENT_STATUS XSigNewTracksReadyV2(SRVTRACKS_V2 * pTrackBuffer, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigGetExtendedTracks") )) CLIENT_STATUS XSigGetExtendedTracks(EXTENDED_TRACKS * pTrackBuffer, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigSetZoneFile") )) CLIENT_STATUS XSigSetZoneFile(char ZoneCommand, char ZoneName[256], SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigGetZoneFile") )) CLIENT_STATUS XSigGetZoneFile(char ZoneName[256], SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigSetGpsDefaultStatus") )) CLIENT_STATUS XSigSetGpsDefaultStatus(GPS_STATUS *pStat, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigGetGpsStatus") )) CLIENT_STATUS XSigGetGpsStatus(GPS_STATUS *pStat, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigNewGpsFix") )) CLIENT_STATUS XSigNewGpsFix(SEASCAN_GPS_FIX * newGPSFix, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigNewTimeFix") )) CLIENT_STATUS XSigNewTimeFix(SEASCAN_TIME_FIX * newTimeFix, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigGetBitmapParms") )) CLIENT_STATUS XSigGetBitmapParms(USHORT *NumBits, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigSetBitmapParms") )) CLIENT_STATUS XSigSetBitmapParms(USHORT NumBits, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigGet1BitThreshold") )) CLIENT_STATUS XSigGet1BitThreshold(USHORT *Threshold, SHORT TargetServer);
extern __stdcall __attribute__ ((alias ("XSigSet1BitThreshold") )) CLIENT_STATUS XSigSet1BitThreshold(USHORT Threshold, SHORT TargetServer);

#endif // ifndef _CLIENT12_H
